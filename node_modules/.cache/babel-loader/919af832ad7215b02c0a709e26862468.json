{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Redux-Advance-Practice\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\nimport { uiActions } from \"./store/ui-slice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst isInitial = true;\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const cartIsVisible = useSelector(_ref => {\n    let {\n      ui: {\n        cartIsVisible\n      }\n    } = _ref;\n    return cartIsVisible;\n  });\n  const notification = useSelector(state => state.ui.notification);\n  const cart = useSelector(state => state.cart);\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(uiActions.showNotification({\n        status: \"pending\",\n        title: \"Sending....\",\n        message: \"Sending Cart Data!\"\n      }));\n      const response = await fetch(\"https://react-redux-3a649-default-rtdb.firebaseio.com/cart.json\", {\n        method: \"PUT\",\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Sending Cart data failed.\");\n      }\n\n      dispatch(uiActions.showNotification({\n        status: \"success\",\n        title: \"Success....\",\n        message: \"Sent Cart Data Successfully!\"\n      }));\n    };\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    sendCartData().catch(error => dispatch(uiActions.showNotification({\n      status: \"error\",\n      title: \"Error!\",\n      message: \"Sending Cart Data failed!\"\n    })));\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [cartIsVisible && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"plyJFnScwWtr1ddVjcViHU6a0X4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","Fragment","useSelector","useDispatch","Cart","Layout","Products","Notification","uiActions","isInitial","App","dispatch","cartIsVisible","ui","notification","state","cart","sendCartData","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","catch","error"],"sources":["D:/React/Redux-Advance-Practice/src/App.js"],"sourcesContent":["import { useEffect, Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\nimport { uiActions } from \"./store/ui-slice\";\n\nconst isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const cartIsVisible = useSelector(\n    ({ ui: { cartIsVisible } }) => cartIsVisible\n  );\n  const notification = useSelector((state) => state.ui.notification);\n\n  const cart = useSelector((state) => state.cart);\n\n  useEffect(() => {\n    const sendCartData = async () => {\n      dispatch(\n        uiActions.showNotification({\n          status: \"pending\",\n          title: \"Sending....\",\n          message: \"Sending Cart Data!\",\n        })\n      );\n      const response = await fetch(\n        \"https://react-redux-3a649-default-rtdb.firebaseio.com/cart.json\",\n        {\n          method: \"PUT\",\n          body: JSON.stringify(cart),\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Sending Cart data failed.\");\n      }\n\n      dispatch(\n        uiActions.showNotification({\n          status: \"success\",\n          title: \"Success....\",\n          message: \"Sent Cart Data Successfully!\",\n        })\n      );\n    };\n\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    sendCartData().catch((error) =>\n      dispatch(\n        uiActions.showNotification({\n          status: \"error\",\n          title: \"Error!\",\n          message: \"Sending Cart Data failed!\",\n        })\n      )\n    );\n  }, [cart, dispatch]);\n\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {cartIsVisible && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,MAAMC,SAAS,GAAG,IAAlB;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;EAEA,MAAMS,aAAa,GAAGV,WAAW,CAC/B;IAAA,IAAC;MAAEW,EAAE,EAAE;QAAED;MAAF;IAAN,CAAD;IAAA,OAA+BA,aAA/B;EAAA,CAD+B,CAAjC;EAGA,MAAME,YAAY,GAAGZ,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACF,EAAN,CAASC,YAArB,CAAhC;EAEA,MAAME,IAAI,GAAGd,WAAW,CAAEa,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAxB;EAEAhB,SAAS,CAAC,MAAM;IACd,MAAMiB,YAAY,GAAG,YAAY;MAC/BN,QAAQ,CACNH,SAAS,CAACU,gBAAV,CAA2B;QACzBC,MAAM,EAAE,SADiB;QAEzBC,KAAK,EAAE,aAFkB;QAGzBC,OAAO,EAAE;MAHgB,CAA3B,CADM,CAAR;MAOA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAC1B,iEAD0B,EAE1B;QACEC,MAAM,EAAE,KADV;QAEEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,IAAf;MAFR,CAF0B,CAA5B;;MAQA,IAAI,CAACM,QAAQ,CAACM,EAAd,EAAkB;QAChB,MAAM,IAAIC,KAAJ,CAAU,2BAAV,CAAN;MACD;;MAEDlB,QAAQ,CACNH,SAAS,CAACU,gBAAV,CAA2B;QACzBC,MAAM,EAAE,SADiB;QAEzBC,KAAK,EAAE,aAFkB;QAGzBC,OAAO,EAAE;MAHgB,CAA3B,CADM,CAAR;IAOD,CA3BD;;IA6BA,IAAIZ,SAAJ,EAAe;MACbA,SAAS,GAAG,KAAZ;MACA;IACD;;IAEDQ,YAAY,GAAGa,KAAf,CAAsBC,KAAD,IACnBpB,QAAQ,CACNH,SAAS,CAACU,gBAAV,CAA2B;MACzBC,MAAM,EAAE,OADiB;MAEzBC,KAAK,EAAE,QAFkB;MAGzBC,OAAO,EAAE;IAHgB,CAA3B,CADM,CADV;EASD,CA5CQ,EA4CN,CAACL,IAAD,EAAOL,QAAP,CA5CM,CAAT;EA8CA,oBACE,QAAC,QAAD;IAAA,WACGG,YAAY,iBACX,QAAC,YAAD;MACE,MAAM,EAAEA,YAAY,CAACK,MADvB;MAEE,KAAK,EAAEL,YAAY,CAACM,KAFtB;MAGE,OAAO,EAAEN,YAAY,CAACO;IAHxB;MAAA;MAAA;MAAA;IAAA,QAFJ,eAQE,QAAC,MAAD;MAAA,WACGT,aAAa,iBAAI,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA,QADpB,eAEE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GAvEQF,G;UACUP,W,EAEKD,W,EAGDA,W,EAERA,W;;;KARNQ,G;AAyET,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}