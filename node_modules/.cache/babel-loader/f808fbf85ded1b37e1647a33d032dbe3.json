{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    changed: true\n  },\n  reducers: {\n    addItemToCart: (state, action) => {\n      console.log(\"REACH\");\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n      state.changed = true;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart: (state, action) => {\n      console.log(\"REACH\");\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n      state.changed = true;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    },\n\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","changed","reducers","addItemToCart","state","action","console","log","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","replaceCart","cartActions","actions"],"sources":["D:/React/Redux-Advance-Practice/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: { items: [], totalQuantity: 0, changed: true },\r\n  reducers: {\r\n    addItemToCart: (state, action) => {\r\n      console.log(\"REACH\");\r\n      const newItem = action.payload;\r\n\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n\r\n      state.totalQuantity++;\r\n      state.changed = true;\r\n\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItemFromCart: (state, action) => {\r\n      console.log(\"REACH\");\r\n\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n\r\n      state.totalQuantity--;\r\n      state.changed = true;\r\n\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n    },\r\n    replaceCart(state, action) {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.items = action.payload.items;\r\n    },\r\n  },\r\n});\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC5BE,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAE;IAAEC,KAAK,EAAE,EAAT;IAAaC,aAAa,EAAE,CAA5B;IAA+BC,OAAO,EAAE;EAAxC,CAFc;EAG5BC,QAAQ,EAAE;IACRC,aAAa,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAChCC,OAAO,CAACC,GAAR,CAAY,OAAZ;MACA,MAAMC,OAAO,GAAGH,MAAM,CAACI,OAAvB;MAEA,MAAMC,YAAY,GAAGN,KAAK,CAACL,KAAN,CAAYY,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA/C,CAArB;MAEAT,KAAK,CAACJ,aAAN;MACAI,KAAK,CAACH,OAAN,GAAgB,IAAhB;;MAEA,IAAI,CAACS,YAAL,EAAmB;QACjBN,KAAK,CAACL,KAAN,CAAYe,IAAZ,CAAiB;UACfD,EAAE,EAAEL,OAAO,CAACK,EADG;UAEfE,KAAK,EAAEP,OAAO,CAACO,KAFA;UAGfC,QAAQ,EAAE,CAHK;UAIfC,UAAU,EAAET,OAAO,CAACO,KAJL;UAKflB,IAAI,EAAEW,OAAO,CAACU;QALC,CAAjB;MAOD,CARD,MAQO;QACLR,YAAY,CAACM,QAAb;QACAN,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BT,OAAO,CAACO,KAA5D;MACD;IACF,CAtBO;IAuBRI,kBAAkB,EAAE,CAACf,KAAD,EAAQC,MAAR,KAAmB;MACrCC,OAAO,CAACC,GAAR,CAAY,OAAZ;MAEA,MAAMM,EAAE,GAAGR,MAAM,CAACI,OAAlB;MACA,MAAMC,YAAY,GAAGN,KAAK,CAACL,KAAN,CAAYY,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAArB;MAEAT,KAAK,CAACJ,aAAN;MACAI,KAAK,CAACH,OAAN,GAAgB,IAAhB;;MAEA,IAAIS,YAAY,CAACM,QAAb,KAA0B,CAA9B,EAAiC;QAC/BZ,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYqB,MAAZ,CAAoBR,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAzC,CAAd;MACD,CAFD,MAEO;QACLH,YAAY,CAACM,QAAb;QACAN,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACK,KAAjE;MACD;IACF,CAtCO;;IAuCRM,WAAW,CAACjB,KAAD,EAAQC,MAAR,EAAgB;MACzBD,KAAK,CAACJ,aAAN,GAAsBK,MAAM,CAACI,OAAP,CAAeT,aAArC;MACAI,KAAK,CAACL,KAAN,GAAcM,MAAM,CAACI,OAAP,CAAeV,KAA7B;IACD;;EA1CO;AAHkB,CAAD,CAA7B;AAiDA,OAAO,MAAMuB,WAAW,GAAG1B,SAAS,CAAC2B,OAA9B;AAEP,eAAe3B,SAAf"},"metadata":{},"sourceType":"module"}