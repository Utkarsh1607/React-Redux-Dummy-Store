{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { uiActions } from \"./ui-slice\";\nconst cartSlice = createSlice({\n  name: \"cart\",\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart: (state, action) => {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity++;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n    removeItemFromCart: (state, action) => {\n      const id = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existingItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existingItem.quantity--;\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\n      }\n    },\n\n    replaceCart(state, action) {\n      state.totalQuantity = action.payload.totalQuantity;\n      state.items = action.payload.items;\n    }\n\n  }\n});\n\nconst sendCartData = cart => {\n  return dispatch => {\n    dispatch(uiActions.showNotification({\n      status: \"pending\",\n      title: \"Sending....\",\n      message: \"Sending Cart Data!\"\n    }));\n  };\n};\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"names":["createSlice","uiActions","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","filter","replaceCart","sendCartData","cart","dispatch","showNotification","status","message","cartActions","actions"],"sources":["D:/React/Redux-Advance-Practice/src/store/cart-slice.js"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { uiActions } from \"./ui-slice\";\r\n\r\nconst cartSlice = createSlice({\r\n  name: \"cart\",\r\n  initialState: { items: [], totalQuantity: 0 },\r\n  reducers: {\r\n    addItemToCart: (state, action) => {\r\n      const newItem = action.payload;\r\n\r\n      const existingItem = state.items.find((item) => item.id === newItem.id);\r\n\r\n      state.totalQuantity++;\r\n\r\n      if (!existingItem) {\r\n        state.items.push({\r\n          id: newItem.id,\r\n          price: newItem.price,\r\n          quantity: 1,\r\n          totalPrice: newItem.price,\r\n          name: newItem.title,\r\n        });\r\n      } else {\r\n        existingItem.quantity++;\r\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\r\n      }\r\n    },\r\n    removeItemFromCart: (state, action) => {\r\n      const id = action.payload;\r\n      const existingItem = state.items.find((item) => item.id === id);\r\n\r\n      state.totalQuantity--;\r\n\r\n      if (existingItem.quantity === 1) {\r\n        state.items = state.items.filter((item) => item.id !== id);\r\n      } else {\r\n        existingItem.quantity--;\r\n        existingItem.totalPrice = existingItem.totalPrice - existingItem.price;\r\n      }\r\n    },\r\n    replaceCart(state, action) {\r\n      state.totalQuantity = action.payload.totalQuantity;\r\n      state.items = action.payload.items;\r\n    },\r\n  },\r\n});\r\n\r\nconst sendCartData = (cart) => {\r\n  return (dispatch) => {\r\n    dispatch(\r\n      uiActions.showNotification({\r\n        status: \"pending\",\r\n        title: \"Sending....\",\r\n        message: \"Sending Cart Data!\",\r\n      })\r\n    );\r\n  };\r\n};\r\n\r\nexport const cartActions = cartSlice.actions;\r\n\r\nexport default cartSlice;\r\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,SAAT,QAA0B,YAA1B;AAEA,MAAMC,SAAS,GAAGF,WAAW,CAAC;EAC5BG,IAAI,EAAE,MADsB;EAE5BC,YAAY,EAAE;IAAEC,KAAK,EAAE,EAAT;IAAaC,aAAa,EAAE;EAA5B,CAFc;EAG5BC,QAAQ,EAAE;IACRC,aAAa,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;MAChC,MAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;MAEA,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA/C,CAArB;MAEAP,KAAK,CAACH,aAAN;;MAEA,IAAI,CAACO,YAAL,EAAmB;QACjBJ,KAAK,CAACJ,KAAN,CAAYY,IAAZ,CAAiB;UACfD,EAAE,EAAEL,OAAO,CAACK,EADG;UAEfE,KAAK,EAAEP,OAAO,CAACO,KAFA;UAGfC,QAAQ,EAAE,CAHK;UAIfC,UAAU,EAAET,OAAO,CAACO,KAJL;UAKff,IAAI,EAAEQ,OAAO,CAACU;QALC,CAAjB;MAOD,CARD,MAQO;QACLR,YAAY,CAACM,QAAb;QACAN,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BT,OAAO,CAACO,KAA5D;MACD;IACF,CApBO;IAqBRI,kBAAkB,EAAE,CAACb,KAAD,EAAQC,MAAR,KAAmB;MACrC,MAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;MACA,MAAMC,YAAY,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAkBC,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAArB;MAEAP,KAAK,CAACH,aAAN;;MAEA,IAAIO,YAAY,CAACM,QAAb,KAA0B,CAA9B,EAAiC;QAC/BV,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,CAAYkB,MAAZ,CAAoBR,IAAD,IAAUA,IAAI,CAACC,EAAL,KAAYA,EAAzC,CAAd;MACD,CAFD,MAEO;QACLH,YAAY,CAACM,QAAb;QACAN,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACK,KAAjE;MACD;IACF,CAjCO;;IAkCRM,WAAW,CAACf,KAAD,EAAQC,MAAR,EAAgB;MACzBD,KAAK,CAACH,aAAN,GAAsBI,MAAM,CAACE,OAAP,CAAeN,aAArC;MACAG,KAAK,CAACJ,KAAN,GAAcK,MAAM,CAACE,OAAP,CAAeP,KAA7B;IACD;;EArCO;AAHkB,CAAD,CAA7B;;AA4CA,MAAMoB,YAAY,GAAIC,IAAD,IAAU;EAC7B,OAAQC,QAAD,IAAc;IACnBA,QAAQ,CACN1B,SAAS,CAAC2B,gBAAV,CAA2B;MACzBC,MAAM,EAAE,SADiB;MAEzBR,KAAK,EAAE,aAFkB;MAGzBS,OAAO,EAAE;IAHgB,CAA3B,CADM,CAAR;EAOD,CARD;AASD,CAVD;;AAYA,OAAO,MAAMC,WAAW,GAAG7B,SAAS,CAAC8B,OAA9B;AAEP,eAAe9B,SAAf"},"metadata":{},"sourceType":"module"}