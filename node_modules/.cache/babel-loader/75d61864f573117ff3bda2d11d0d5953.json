{"ast":null,"code":"var _jsxFileName = \"D:\\\\React\\\\Redux-Advance-Practice\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\nimport { fetchCartData, sendCartData } from \"./store/cart-actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isInitial = true;\n\nfunction App() {\n  _s();\n\n  const dispatch = useDispatch();\n  const cartIsVisible = useSelector(_ref => {\n    let {\n      ui: {\n        cartIsVisible\n      }\n    } = _ref;\n    return cartIsVisible;\n  });\n  const notification = useSelector(state => state.ui.notification);\n  const cart = useSelector(state => state.cart);\n  console.log(cart); // useEffect(() => {\n  //   const sendCartData = async () => {\n  //     dispatch(\n  //       uiActions.showNotification({\n  //         status: \"pending\",\n  //         title: \"Sending....\",\n  //         message: \"Sending Cart Data!\",\n  //       })\n  //     );\n  //     const response = await fetch(\n  //       \"https://react-redux-3a649-default-rtdb.firebaseio.com/cart.json\",\n  //       {\n  //         method: \"PUT\",\n  //         body: JSON.stringify(cart),\n  //       }\n  //     );\n  //     if (!response.ok) {\n  //       throw new Error(\"Sending Cart data failed.\");\n  //     }\n  //     dispatch(\n  //       uiActions.showNotification({\n  //         status: \"success\",\n  //         title: \"Success....\",\n  //         message: \"Sent Cart Data Successfully!\",\n  //       })\n  //     );\n  //   };\n  //   if (isInitial) {\n  //     isInitial = false;\n  //     return;\n  //   }\n  //   sendCartData().catch(() =>\n  //     dispatch(\n  //       uiActions.showNotification({\n  //         status: \"error\",\n  //         title: \"Error!\",\n  //         message: \"Sending Cart Data failed!\",\n  //       })\n  //     )\n  //   );\n  // }, [cart, dispatch]);\n\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    } // if (cart.changed) {\n    // }\n\n\n    dispatch(sendCartData(cart));\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [cartIsVisible && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"nYwamM+nNDwhfuFpQPq4xELPQpI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useEffect","Fragment","useSelector","useDispatch","Cart","Layout","Products","Notification","fetchCartData","sendCartData","isInitial","App","dispatch","cartIsVisible","ui","notification","state","cart","console","log","status","title","message"],"sources":["D:/React/Redux-Advance-Practice/src/App.js"],"sourcesContent":["import { useEffect, Fragment } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Cart from \"./components/Cart/Cart\";\nimport Layout from \"./components/Layout/Layout\";\nimport Products from \"./components/Shop/Products\";\nimport Notification from \"./components/UI/Notification\";\nimport { fetchCartData, sendCartData } from \"./store/cart-actions\";\n\nlet isInitial = true;\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const cartIsVisible = useSelector(\n    ({ ui: { cartIsVisible } }) => cartIsVisible\n  );\n  const notification = useSelector((state) => state.ui.notification);\n\n  const cart = useSelector((state) => state.cart);\n\n  console.log(cart);\n\n  // useEffect(() => {\n  //   const sendCartData = async () => {\n  //     dispatch(\n  //       uiActions.showNotification({\n  //         status: \"pending\",\n  //         title: \"Sending....\",\n  //         message: \"Sending Cart Data!\",\n  //       })\n  //     );\n  //     const response = await fetch(\n  //       \"https://react-redux-3a649-default-rtdb.firebaseio.com/cart.json\",\n  //       {\n  //         method: \"PUT\",\n  //         body: JSON.stringify(cart),\n  //       }\n  //     );\n\n  //     if (!response.ok) {\n  //       throw new Error(\"Sending Cart data failed.\");\n  //     }\n\n  //     dispatch(\n  //       uiActions.showNotification({\n  //         status: \"success\",\n  //         title: \"Success....\",\n  //         message: \"Sent Cart Data Successfully!\",\n  //       })\n  //     );\n  //   };\n\n  //   if (isInitial) {\n  //     isInitial = false;\n  //     return;\n  //   }\n\n  //   sendCartData().catch(() =>\n  //     dispatch(\n  //       uiActions.showNotification({\n  //         status: \"error\",\n  //         title: \"Error!\",\n  //         message: \"Sending Cart Data failed!\",\n  //       })\n  //     )\n  //   );\n  // }, [cart, dispatch]);\n\n  useEffect(() => {\n    dispatch(fetchCartData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (isInitial) {\n      isInitial = false;\n      return;\n    }\n\n    // if (cart.changed) {\n    // }\n    dispatch(sendCartData(cart));\n  }, [cart, dispatch]);\n\n  return (\n    <Fragment>\n      {notification && (\n        <Notification\n          status={notification.status}\n          title={notification.title}\n          message={notification.message}\n        />\n      )}\n      <Layout>\n        {cartIsVisible && <Cart />}\n        <Products />\n      </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,sBAA5C;;AAEA,IAAIC,SAAS,GAAG,IAAhB;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;EAEA,MAAMU,aAAa,GAAGX,WAAW,CAC/B;IAAA,IAAC;MAAEY,EAAE,EAAE;QAAED;MAAF;IAAN,CAAD;IAAA,OAA+BA,aAA/B;EAAA,CAD+B,CAAjC;EAGA,MAAME,YAAY,GAAGb,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACF,EAAN,CAASC,YAArB,CAAhC;EAEA,MAAME,IAAI,GAAGf,WAAW,CAAEc,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAAxB;EAEAC,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAVa,CAYb;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEAjB,SAAS,CAAC,MAAM;IACdY,QAAQ,CAACJ,aAAa,EAAd,CAAR;EACD,CAFQ,EAEN,CAACI,QAAD,CAFM,CAAT;EAIAZ,SAAS,CAAC,MAAM;IACd,IAAIU,SAAJ,EAAe;MACbA,SAAS,GAAG,KAAZ;MACA;IACD,CAJa,CAMd;IACA;;;IACAE,QAAQ,CAACH,YAAY,CAACQ,IAAD,CAAb,CAAR;EACD,CATQ,EASN,CAACA,IAAD,EAAOL,QAAP,CATM,CAAT;EAWA,oBACE,QAAC,QAAD;IAAA,WACGG,YAAY,iBACX,QAAC,YAAD;MACE,MAAM,EAAEA,YAAY,CAACK,MADvB;MAEE,KAAK,EAAEL,YAAY,CAACM,KAFtB;MAGE,OAAO,EAAEN,YAAY,CAACO;IAHxB;MAAA;MAAA;MAAA;IAAA,QAFJ,eAQE,QAAC,MAAD;MAAA,WACGT,aAAa,iBAAI,QAAC,IAAD;QAAA;QAAA;QAAA;MAAA,QADpB,eAEE,QAAC,QAAD;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QARF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GAxFQF,G;UACUR,W,EAEKD,W,EAGDA,W,EAERA,W;;;KARNS,G;AA0FT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}